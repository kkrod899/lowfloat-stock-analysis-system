name: Stock Analysis Workflow

on:
  # 日本時間 AM 05:05 (UTC 20:05) に、このワークフロー全体が開始されます
  schedule:
    - cron: '5 20 * * 1-5'
  
  # 手動でも実行できます
  workflow_dispatch:

jobs:
  # === Job 1: 仕事A (データを取得して保存する) ===
  fetch:
    name: Step A - Fetch Watchlist
    runs-on: ubuntu-latest
    steps:
      # ソースコードをチェックアウト
      - uses: actions/checkout@v4
      
      # Python環境をセットアップ
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      # 必要なライブラリをインストールし、仕事Aのスクリプトを実行
      - name: Install and Run Fetch Script
        run: |
          pip install -r requirements.txt
          python step_a_fetch.py
          
      # 仕事Aが作成したoutputフォルダを、Artifactsとしてアップロード
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: analysis-artifacts
          path: output/

  # === Job 2: 仕事B (データを使って通知 & シミュレーション) ===
  notify:
    name: Step B - Notify and Simulate
    runs-on: ubuntu-latest
    # ★★★ このジョブは、'fetch'ジョブが成功しないと始まりません ★★★
    needs: fetch 
    steps:
      # ソースコードをチェックアウト
      - uses: actions/checkout@v4
      
      # Python環境をセットアップ
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      # 仕事AがアップロードしたArtifactsをダウンロード
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: analysis-artifacts
          path: output
          
      # 必要なライブラリをインストールし、仕事Bのスクリプトを実行
      - name: Install and Run Notify Script
        run: |
          pip install -r requirements.txt
          python step_b_notify.py
        env:
          # Discordの通知先は、仕事Bだけで使います
          DISCORD_HOOK: ${{ secrets.DISCORD_HOOK }}
      
      # 仕事Bが作成したresults.csvも、同じ名前で上書きアップロード
      - name: Upload Artifacts with Results
        uses: actions/upload-artifact@v4
        with:
          name: analysis-artifacts
          path: output/
